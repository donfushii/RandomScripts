local enabled = getgenv().enabled
if not enabled then return end

local Players = game:GetService("Players")

local currentTarget = nil
local billboardGui = nil

local function clearPrevious()
    if currentTarget then
        local highlight = currentTarget:FindFirstChildOfClass("Highlight")
        if highlight then highlight:Destroy() end

        if billboardGui and billboardGui.Parent then
            billboardGui:Destroy()
            billboardGui = nil
        end

        currentTarget = nil
    else
        for _, gui in ipairs(workspace:GetDescendants()) do
            if gui:IsA("BillboardGui") and gui.Name == "BrainrotLabel" then
                gui:Destroy()
            end
        end
    end
end

local function createBillboard(model, priceText, displayName)
    local part = Instance.new("Part")
    part.Name = "BrainrotBillboard"
    part.Anchored = true
    part.CanCollide = false
    part.Transparency = 1
    part.Size = Vector3.new(1,1,1)
    part.CFrame = model:GetBoundingBox() + Vector3.new(0, 5, 0)
    part.Parent = model

    local bb = Instance.new("BillboardGui")
    bb.Size = UDim2.new(0, 120, 0, 30)
    bb.AlwaysOnTop = true
    bb.LightInfluence = 0
    bb.MaxDistance = 1000
    bb.Adornee = part
    bb.Name = "BrainrotLabel"
    bb.Parent = part

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1,0,1,0)
    label.BackgroundTransparency = 1
    label.Text = "ðŸ’° " .. priceText .. " - " .. displayName
    label.TextColor3 = Color3.fromRGB(0,255,0)
    label.TextStrokeColor3 = Color3.new(0,0,0)
    label.TextStrokeTransparency = 0
    label.Font = Enum.Font.GothamBold
    label.TextScaled = true
    label.Parent = bb

    billboardGui = bb
end

local function addHighlightAndGui(model, priceText, displayName)
    clearPrevious()
    currentTarget = model

    local highlight = Instance.new("Highlight")
    highlight.FillColor = Color3.fromRGB(0,255,0)
    highlight.OutlineColor = Color3.new(0,0,0)
    highlight.OutlineTransparency = 0
    highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
    highlight.Adornee = model
    highlight.Parent = model

    createBillboard(model, priceText, displayName)
end

local function parsePrice(text)
    local num = tonumber(text:match("%d+%.?%d*"))
    local suffix = text:match("[KMB]")

    if not num then return 0 end

    if suffix == "K" then
        return num * 1e3
    elseif suffix == "M" then
        return num * 1e6
    elseif suffix == "B" then
        return num * 1e9
    else
        return num
    end
end

local function findMostValuableModel()
    local plots = workspace:FindFirstChild("Plots")
    if not plots then return nil, "", "Unknown" end

    local highestModel = nil
    local highestValue = 0
    local bestName = "Unknown"
    local bestPriceText = ""

    for _, plot in ipairs(plots:GetChildren()) do
        local podiums = plot:FindFirstChild("AnimalPodiums")
        if podiums then
            for _, podium in ipairs(podiums:GetChildren()) do
                local base = podium:FindFirstChild("Base")
                if base then
                    local spawn = base:FindFirstChild("Spawn")
                    if spawn then
                        local attachment = spawn:FindFirstChild("Attachment")
                        if attachment then
                            local overhead = nil
                            for _, child in ipairs(attachment:GetChildren()) do
                                if child:IsA("BillboardGui") and child.Name == "AnimalOverhead" then
                                    overhead = child
                                    break
                                end
                            end

                            if overhead then
                                local priceLabel = overhead:FindFirstChild("Price")
                                local displayNameLabel = overhead:FindFirstChild("DisplayName")
                                if priceLabel and priceLabel:IsA("TextLabel") and displayNameLabel and displayNameLabel:IsA("TextLabel") then
                                    local priceText = priceLabel.Text
                                    local displayName = displayNameLabel.Text

                                    local numeric = parsePrice(priceText)
                                    if numeric and numeric > highestValue then
                                        highestValue = numeric

                                        local modelVisible = workspace:FindFirstChild(displayName)
                                        if modelVisible then
                                            highestModel = modelVisible
                                        else
                                            highestModel = podium
                                        end

                                        bestName = displayName
                                        bestPriceText = priceText
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end

    return highestModel, bestPriceText, bestName
end

task.spawn(function()
    while getgenv().enabled do
        local model, priceText, displayName = findMostValuableModel()

        if model ~= currentTarget then
            if model then
                addHighlightAndGui(model, priceText, displayName)
            else
                clearPrevious()
            end
        end

        task.wait(1)
    end
    clearPrevious()
end)
