--[[

Copyright (C) 2025 github.com/donfushii
Powered By Imperium â™¡

--]]

-- [ RE-EXECUTION NOTIFY ] â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

local CoreGui = game:GetService("CoreGui")
local ImperiumUI = "Imperium"
local ImperiumToggle = "ImperiumToggle"

local function checkImperium()
    local hasImperiumUI = CoreGui:FindFirstChild(ImperiumUI) ~= nil
    local hasImperiumToggle = CoreGui:FindFirstChild(ImperiumToggle) ~= nil

    if hasImperiumUI and hasImperiumToggle then
        return true
    end

    return false
end

if checkImperium() then
    return
end

-- [ AUTHENTICATION ] â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

local console = loadstring(game:HttpGet("https://raw.githubusercontent.com/Imperium-Development/Imperium/main/Core/Loaders/ImperiumConsole.lua"))()

local message = console.custom_console_progressbar("[IMPERIUM]: Authenticating...")

local start_time = os.clock()

for i = 1, 25 do
    message.update_progress(i)
    task.wait(.05)
end

local elapsed_time = os.clock() - start_time

message.update_message(("[IMPERIUM]: Authenticated in %.10f seconds."):format(elapsed_time), "rbxasset://textures/AudioDiscovery/done.png", Color3.fromRGB(51, 255, 85))


-- [ LIBRARY ] â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

local ImperiumLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/Imperium-Development/Imperium/main/UILibrary/ImperiumLibrary.lua"))()

local Windows = ImperiumLib:Window("Imperium", Color3.fromRGB(212, 255, 254), Enum.KeyCode.V)

ImperiumLib:Notification("Notification", "Welcome to Imperium! Join our Discord by pressing Okay or using our invite:\n\nãƒ»  discord.gg/sH5Mh2XfPC", "Okay!", function()
    setclipboard("https://discord.gg/sH5Mh2XfPC")
end)

-- [ TABS ] â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

local HomeTAB = Windows:Tab("Home")
local MainTAB = Windows:Tab("Main")
local ESPTAB = Windows:Tab("ESP")
local MovementTAB = Windows:Tab("Movement")
local AutobuyTAB = Windows:Tab("Autobuy")
local CreditsTAB = Windows:Tab("Credits")

-- [ SERVICE'S ] â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

local MarketplaceService = game:GetService("MarketplaceService")
local ContextActionService = game:GetService("ContextActionService")
local VirtualInputManager = game:GetService("VirtualInputManager")
local RunService = game:GetService("RunService")

local Players = game:GetService("Players")
local Player = Players.LocalPlayer
local LocalPlayer = Players.LocalPlayer

local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")
local RootPart = Character:WaitForChild("HumanoidRootPart")
local Backpack = Player:WaitForChild("Backpack")

-- [ ESP FUNCTION'S  |  PLAYER ESP ] â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

local danceAnimations = {
    "rbxassetid://108604090597149",
    "rbxassetid://109061983885712",
    "rbxassetid://507777268"
}

getgenv().ESPColor = Color3.fromRGB(0, 255, 0)

getgenv().BrainrotESP = false
getgenv().PlayersESP = false
getgenv().LockTimerESP = false

local currentTarget = nil
local billboardGui = nil
local brainrotESPThread = nil
local playerESPThread = nil

local playerBillboards = {}

local function isInvisible(character)
    local head = character:FindFirstChild("Head")
    if head then
        return head.Transparency >= 1
    end
    return false
end

local function createOrUpdatePlayerESP(plr)
	local char = plr.Character
	if not char then return end

	local highlight = char:FindFirstChild("PlayerESPHighlight")
	if not highlight then
		highlight = Instance.new("Highlight")
		highlight.Name = "PlayerESPHighlight"
		highlight.OutlineTransparency = 0
		highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
		highlight.Parent = char
	end

	highlight.FillColor = getgenv().ESPColor
	highlight.OutlineColor = Color3.new(0, 0, 0)

	local adorneePart = char:FindFirstChild("Head") or char:FindFirstChildWhichIsA("BasePart")
	if not adorneePart then return end

	local existingGui = playerBillboards[plr]
	if existingGui and (not existingGui.Parent or existingGui.Adornee ~= adorneePart) then
		existingGui:Destroy()
		playerBillboards[plr] = nil
		existingGui = nil
	end

	if not existingGui then
		local bb = Instance.new("BillboardGui")
		bb.Name = "PlayerESPBillboard"
		bb.Adornee = adorneePart
		bb.Size = UDim2.new(0, 150, 0, 40)
		bb.StudsOffset = Vector3.new(0, 2.5, 0)
		bb.AlwaysOnTop = true
		bb.LightInfluence = 0
		bb.MaxDistance = 1000
		bb.Parent = adorneePart

		local label = Instance.new("TextLabel")
		label.Name = "ESPLabel"
		label.Size = UDim2.new(1, 0, 1, 0)
		label.BackgroundTransparency = 1
		label.TextColor3 = getgenv().ESPColor
		label.TextStrokeColor3 = Color3.new(0, 0, 0)
		label.TextStrokeTransparency = 0
		label.Font = Enum.Font.GothamBold
		label.TextSize = 10
		label.TextYAlignment = Enum.TextYAlignment.Top
		label.Parent = bb

		playerBillboards[plr] = bb
	end

	local label = playerBillboards[plr]:FindFirstChild("ESPLabel")
	if label then
		local invisibleStatus = isInvisible(char) and "ON" or "OFF"
		label.Text = string.format("@%s    |    Invisible: %s", plr.DisplayName, invisibleStatus)
		label.TextColor3 = getgenv().ESPColor
	end
end

local function removePlayerESP(plr)
	local char = plr.Character
	if char then
		local highlight = char:FindFirstChild("PlayerESPHighlight")
		if highlight then highlight:Destroy() end
	end
	local bb = playerBillboards[plr]
	if bb and bb.Parent then
		bb:Destroy()
	end
	playerBillboards[plr] = nil
end

local function removeAllPlayerESP()
	for _, plr in ipairs(Players:GetPlayers()) do
		removePlayerESP(plr)
	end
end

task.spawn(function()
	while true do
		if getgenv().PlayersESP then
			for _, plr in ipairs(Players:GetPlayers()) do
				if plr ~= Players.LocalPlayer and plr.Character then
					createOrUpdatePlayerESP(plr)
				end
			end
		else
			removeAllPlayerESP()
		end
		task.wait(1)
	end
end)

-- [ ESP FUNCTION'S  |  BRAINROT ESP ] â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

local function clearPrevious()
    if currentTarget then
        local highlight = currentTarget:FindFirstChildOfClass("Highlight")
        if highlight then highlight:Destroy() end
    end

    for _, gui in ipairs(workspace:GetDescendants()) do
        if gui:IsA("BillboardGui") and gui.Name == "BrainrotLabel" then
            gui:Destroy()
        end
    end

    currentTarget = nil
    billboardGui = nil
end

local function createBillboard(model, priceText, displayName)
    local part = Instance.new("Part")
    part.Name = "BrainrotBillboard"
    part.Anchored = true
    part.CanCollide = false
    part.Transparency = 1
    part.Size = Vector3.new(1,1,1)
    part.CFrame = model:GetBoundingBox() + Vector3.new(0, 5, 0)
    part.Parent = model

    local bb = Instance.new("BillboardGui")
    bb.Size = UDim2.new(0, 120, 0, 30)
    bb.AlwaysOnTop = true
    bb.LightInfluence = 0
    bb.MaxDistance = 1000
    bb.Adornee = part
    bb.Name = "BrainrotLabel"
    bb.Parent = part

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1,0,1,0)
    label.BackgroundTransparency = 1
    label.Text = "ðŸ’° " .. priceText .. " - " .. displayName
    label.TextColor3 = getgenv().ESPColor
    label.TextStrokeColor3 = Color3.new(0,0,0)
    label.TextStrokeTransparency = 0
    label.Font = Enum.Font.GothamBold
    label.TextScaled = true
    label.Parent = bb

    billboardGui = bb
end

local function addHighlightAndGui(model, priceText, displayName)
    clearPrevious()
    currentTarget = model

    local highlight = Instance.new("Highlight")
    highlight.FillColor = getgenv().ESPColor
    highlight.OutlineColor = Color3.new(0,0,0)
    highlight.OutlineTransparency = 0
    highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
    highlight.Adornee = model
    highlight.Parent = model

    createBillboard(model, priceText, displayName)
end

local function parsePrice(text)
    local num = tonumber(text:match("%d+%.?%d*"))
    local suffix = text:match("[KMB]")

    if not num then return 0 end

    if suffix == "K" then
        return num * 1e3
    elseif suffix == "M" then
        return num * 1e6
    elseif suffix == "B" then
        return num * 1e9
    else
        return num
    end
end

local function findMostValuableModel()
    local plots = workspace:FindFirstChild("Plots")
    if not plots then return nil, "", "Unknown" end

    local highestModel = nil
    local highestValue = 0
    local bestName = "Unknown"
    local bestPriceText = ""

    for _, plot in ipairs(plots:GetChildren()) do
        local podiums = plot:FindFirstChild("AnimalPodiums")
        if podiums then
            for _, podium in ipairs(podiums:GetChildren()) do
                local base = podium:FindFirstChild("Base")
                if base then
                    local spawn = base:FindFirstChild("Spawn")
                    if spawn then
                        local attachment = spawn:FindFirstChild("Attachment")
                        if attachment then
                            local overhead = attachment:FindFirstChild("AnimalOverhead")
                            if overhead then
                                local priceLabel = overhead:FindFirstChild("Price")
                                local displayNameLabel = overhead:FindFirstChild("DisplayName")
                                if priceLabel and priceLabel:IsA("TextLabel") and displayNameLabel and displayNameLabel:IsA("TextLabel") then
                                    local priceText = priceLabel.Text
                                    local displayName = displayNameLabel.Text

                                    local numeric = parsePrice(priceText)
                                    if numeric and numeric > highestValue then
                                        highestValue = numeric
                                        local modelVisible = workspace:FindFirstChild(displayName)
                                        highestModel = modelVisible or podium
                                        bestName = displayName
                                        bestPriceText = priceText
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end

    return highestModel, bestPriceText, bestName
end

-- [ ESP FUNCTION'S  |  LOCKBASE ESP ] â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

local function updateLockTimerESP()
    for _, plot in ipairs(workspace.Plots:GetChildren()) do
        if plot:IsA("Model") then
            local purchases = plot:FindFirstChild("Purchases")
            if purchases and purchases:IsA("Folder") then
                local plotBlock = purchases:FindFirstChild("PlotBlock")
                if plotBlock and plotBlock:IsA("Model") then
                    local mainPart = plotBlock:FindFirstChild("Main")
                    if mainPart and mainPart:IsA("BasePart") then
                        for _, gui in ipairs(mainPart:GetChildren()) do
                            if gui:IsA("BillboardGui") then
                                if getgenv().LockTimerESP then
                                    gui.AlwaysOnTop = true
                                    gui.MaxDistance = 9999
                                    gui.Size = UDim2.new(5, 100, 7, 100)
                                else
                                    gui.AlwaysOnTop = false
                                    gui.MaxDistance = 60
                                    gui.Size = UDim2.new(7, 0, 10, 0)
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

-- [ MAIN FUNCTION'S  |  DISABLE TRAPS ] â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

getgenv().DisableTraps = false
getgenv().AlwaysInvisible = false
getgenv().LoopDanceEnabled = false

local currentAnimTrack = nil
local characterAddedConn = nil

task.spawn(function()
	while true do
		if getgenv().DisableTraps then
			for _, trap in ipairs(workspace:GetDescendants()) do
				if trap:IsA("Model") and trap.Name == "Trap" then
					local openPart = trap:FindFirstChild("Open", true)
					if openPart and openPart:IsA("MeshPart") then
						local touch = openPart:FindFirstChildOfClass("TouchTransmitter")
						if touch then
							touch:Destroy()
						end
					end
				end
			end
		end
		task.wait(1)
	end
end)

--

local function handleInvisibility()
	local player = game.Players.LocalPlayer
	if not player then return end

	local function tryActivateCloak()
		local backpack = player:FindFirstChild("Backpack")
		if backpack then
			local cloak = backpack:FindFirstChild("Invisibility Cloak")
			if cloak then
				cloak.Parent = player.Character
				if cloak:IsA("Tool") then
					pcall(function()
						cloak:Activate()
					end)
				end
				task.delay(0.5, function()
					local equipped = player.Character and player.Character:FindFirstChild("Invisibility Cloak")
					if equipped then
						equipped:Destroy()
					end
				end)
			else
				ImperiumLib:Notification("Notification", "No 'Invisibility Cloak' found in your Backpack. Make sure you own it before using this toggle.", "Okay!", function() end)
			end
		end
	end

	if player.Character then
		task.spawn(function()
			player.Character:WaitForChild("HumanoidRootPart", 5)
			task.wait(0.5)
			tryActivateCloak()
		end)
	end

	player.CharacterAdded:Connect(function(char)
		if getgenv().AlwaysInvisible then
			task.spawn(function()
				char:WaitForChild("HumanoidRootPart", 5)
				task.wait(0.5)
				tryActivateCloak()
			end)
		end
	end)
end

--

local function stopDance()
    if currentAnimTrack then
        currentAnimTrack:Stop()
        currentAnimTrack:Destroy()
        currentAnimTrack = nil
    end
end

local function playRandomDance()
    local char = Player.Character or Player.CharacterAdded:Wait()
    local hum = char:FindFirstChildOfClass("Humanoid")
    if not hum then return end

    local anim = Instance.new("Animation")
    anim.AnimationId = danceAnimations[math.random(1, #danceAnimations)]

    stopDance()
    currentAnimTrack = hum:LoadAnimation(anim)
    currentAnimTrack.Looped = true
    currentAnimTrack:Play()
end

--

local brainrots = {
	"Cocofanto Elefanto", "Girafa Celestre", "Gattatino Neonino", "Matteo", "Tralalero Tralala",
	"Los Crocodillitos", "Espresso Signora", "Odin Din Din Dun", "Statutino Libertino",
	"Tukanno Bananno", "Trenostruzzo Turbo 3000", "Trippi Troppi Troppa Trippa", "Ballerino Lololo",
	"Los Tungtungtungcitos", "Piccione Macchina", "Orcalero Orcala", "La Vacca Saturno Saturnita",
	"Chimpanzini Spiderini", "Agarrini la Palini", "Los Tralaleritos", "Las Tralaleritas",
	"Las Vaquitas Saturnitas", "Graipuss Medussi", "Chicleteira Bicicleteira", "La Grande Combinasion",
	"Los Combinasionas", "Nuclearo Dinossauro", "Garama and Madundung", "Dragon Cannelloni"
}

getgenv().SelectedBrainrot = nil
getgenv().AutoBuyEnabled = false
getgenv().BuyAllBrainrotsEnabled = false

task.spawn(function()
	while true do
		if getgenv().AutoBuyEnabled and getgenv().SelectedBrainrot then
			local character = LocalPlayer.Character
			local humanoid = character and character:FindFirstChildOfClass("Humanoid")
			local rootPart = character and character:FindFirstChild("HumanoidRootPart")

			for _, model in pairs(workspace.MovingAnimals:GetChildren()) do
				local hrp = model:FindFirstChild("HumanoidRootPart")
				local info = hrp and hrp:FindFirstChild("Info")
				local gui = info and info:FindFirstChild("AnimalOverhead")
				local name = gui and gui:FindFirstChild("DisplayName")
				local prompt = hrp and hrp:FindFirstChild("PromptAttachment") and hrp.PromptAttachment:FindFirstChildWhichIsA("ProximityPrompt")

				if name and name.Text == getgenv().SelectedBrainrot and prompt then
					if humanoid and rootPart then
						local distance = (hrp.Position - rootPart.Position).Magnitude
						if distance > 6 then
							humanoid:MoveTo(hrp.Position + Vector3.new(0, 0, -2))
						else
							fireproximityprompt(prompt)
						end
					end
					break
				end
			end
		end
		task.wait(0.3)
	end
end)

task.spawn(function()
	while task.wait(0.5) do
		if getgenv().BuyAllBrainrotsEnabled then
			for _, desiredName in ipairs(brainrots) do
				local found = false
				local character = LocalPlayer.Character
				local humanoid = character and character:FindFirstChildOfClass("Humanoid")
				local rootPart = character and character:FindFirstChild("HumanoidRootPart")

				for _, model in ipairs(workspace:WaitForChild("MovingAnimals"):GetChildren()) do
					local hrp = model:FindFirstChild("HumanoidRootPart")
					local info = hrp and hrp:FindFirstChild("Info")
					local prompt = hrp and hrp:FindFirstChild("PromptAttachment") and hrp.PromptAttachment:FindFirstChildOfClass("ProximityPrompt")

					if info and info:FindFirstChild("AnimalOverhead") and prompt then
						local label = info.AnimalOverhead:FindFirstChild("DisplayName")
						if label and label.Text == desiredName then
							if humanoid and rootPart then
								humanoid:MoveTo(hrp.Position)
								task.wait(0.5)
								fireproximityprompt(prompt)
							end
							found = true
							break
						end
					end
				end

				if not getgenv().BuyAllBrainrotsEnabled then break end
				if found then task.wait(0.3) end
			end
		end
	end
end)

-- [ TAB #1  -  HOME ] â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

HomeTAB:ImageLabel(function()
end)

-- [ TAB #2 - MAIN ] â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

MainTAB:Toggle("  ãƒ»  Anti Ragdoll   [NOT ADDED]", false, function(bool)	
	print("Disabled for bugs")
end)

MainTAB:Toggle("  ãƒ»  Always invisible", false, function(bool)	
	getgenv().AlwaysInvisible = bool
	if bool then
		handleInvisibility()
	end
end)

MainTAB:Toggle("  ãƒ»  10 Seconds inmortal", false, function(bool)	
	print("Disabled for bugs")
end)

MainTAB:Toggle("  ãƒ»  Disable all traps", false, function(bool)	
	getgenv().DisableTraps = bool
end)

MainTAB:Toggle("  ãƒ»  Auto-Lock Base   [NOT ADDED]", false, function(bool)	
end)

-- [ TAB #3 - ESP ] â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

ESPTAB:ColorpickerAlways("  ãƒ»  ESP Highlight Color", Color3.fromRGB(0, 255, 0), function(t)
    local newColor = Color3.fromRGB(t.R * 255, t.G * 255, t.B * 255)
    getgenv().ESPColor = newColor

    if currentTarget then
        local highlight = currentTarget:FindFirstChildOfClass("Highlight")
        if highlight then
            highlight.FillColor = newColor
        end
        if billboardGui and billboardGui:FindFirstChildOfClass("TextLabel") then
            billboardGui:FindFirstChildOfClass("TextLabel").TextColor3 = newColor
        end
    end

    for _, plr in ipairs(Players:GetPlayers()) do
        local char = plr.Character
        if char then
            local highlight = char:FindFirstChild("PlayerESPHighlight")
            if highlight then
                highlight.FillColor = newColor
            end
            local bb = playerBillboards[plr]
            if bb and bb.Parent then
                local label = bb:FindFirstChild("ESPLabel")
                if label then
                    label.TextColor3 = newColor
                end
            end
        end
    end
end)

ESPTAB:Toggle("  ãƒ»  Players ESP", false, function(bool)
    getgenv().PlayersESP = bool
end)


ESPTAB:Toggle("  ãƒ»  Best Brainrot ESP", false, function(bool)
    getgenv().BrainrotESP = bool

    if bool then
        brainrotESPThread = task.spawn(function()
            while getgenv().BrainrotESP do
                local model, priceText, displayName = findMostValuableModel()

                if model and model ~= currentTarget then
                    addHighlightAndGui(model, priceText, displayName)
                elseif not model then
                    clearPrevious()
                end

                task.wait(1)
            end
            clearPrevious()
        end)
    else
        clearPrevious()
        if brainrotESPThread then
            task.cancel(brainrotESPThread)
            brainrotESPThread = nil
        end
    end
end)

ESPTAB:Toggle("  ãƒ»  Lock Timer ESP", false, function(bool)
    getgenv().LockTimerESP = bool
    updateLockTimerESP()
end)

-- [ TAB #4 - MOVEMENT ] â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

getgenv().SelectedSpeedType = nil
getgenv().SpeedToggleEnabled = false

local function ApplySpeedCoil()
	local toolName = "Speed Coil"
	local velocity = 51

	local tool = Backpack:FindFirstChild(toolName) or Character:FindFirstChild(toolName)

	if not tool then
		ImperiumLib:Notification("Notification", "No 'Speed Coil' found in your Backpack. Make sure you own it before using this toggle.", "Okay!", function() end)
		return
	end

	tool.Parent = Character
	task.wait(0.1)

	pcall(function()
		tool:Activate()
	end)

	local function KeepVelocity()
		if not Humanoid then return end
		Humanoid.WalkSpeed = velocity

		Humanoid:GetPropertyChangedSignal("WalkSpeed"):Connect(function()
			if Humanoid and Humanoid.WalkSpeed < velocity and getgenv().SpeedToggleEnabled then
				Humanoid.WalkSpeed = velocity
			end
		end)
	end

	KeepVelocity()

	tool.Parent = Backpack
end

local function ApplySpeedCloak()
	local toolName = "Invisibility Cloak"
	local velocity = 68

	local Backpack = Player:WaitForChild("Backpack")
	local tool = Backpack:FindFirstChild(toolName) or Character:FindFirstChild(toolName)

	if not tool then
		ImperiumLib:Notification("Notification", "No 'Invisibility Cloak' found in your Backpack. Make sure you own it before using this toggle.", "Okay!", function() end)
		return
	end

	tool.Parent = Character
	task.wait(0.1)

	pcall(function()
		tool:Activate()
	end)

	local function KeepVelocity()
		if not Humanoid then return end
		Humanoid.WalkSpeed = velocity

		Humanoid:GetPropertyChangedSignal("WalkSpeed"):Connect(function()
			if Humanoid and Humanoid.WalkSpeed < velocity and getgenv().SpeedToggleEnabled then
				Humanoid.WalkSpeed = velocity
			end
		end)
	end

	KeepVelocity()

	tool.Parent = Backpack
end

Player.CharacterAdded:Connect(function(char)
	Character = char
	Humanoid = char:WaitForChild("Humanoid")

	if getgenv().SpeedToggleEnabled and getgenv().SelectedSpeedType then
		task.wait(1)
		Backpack = Player:WaitForChild("Backpack")

		if getgenv().SelectedSpeedType == "Speed [COIL]" then
			ApplySpeedCoil()
		elseif getgenv().SelectedSpeedType == "Speed [CLOAK]" then
			ApplySpeedCloak()
		end
	end
end)

MovementTAB:DropdownAlways("  ãƒ»  Choose Speed Type", {"Small Speed", "Speed [COIL]", "Speed [CLOAK]"}, function(value)
    getgenv().SelectedSpeedType = value
end, false)

MovementTAB:Toggle("  ãƒ»  Enable Speed Boost", false, function(bool)
	getgenv().SpeedToggleEnabled = bool

	if bool then
		if not getgenv().SelectedSpeedType then
			ImperiumLib:Notification("Notification", "You must select a Speed Type before activating the toggle.", "Okay!", function() end)
			return
		end

		if getgenv().SelectedSpeedType == "Speed [COIL]" then
			ApplySpeedCoil()
		elseif getgenv().SelectedSpeedType == "Speed [CLOAK]" then
			ApplySpeedCloak()
		end
	else
		if Humanoid then
			Humanoid.WalkSpeed = 34
		end
	end
end)

MovementTAB:Toggle("  ãƒ»  Loop Dance   [TOXIC]", false, function(bool)
    getgenv().LoopDanceEnabled = bool

    if bool then
        playRandomDance()

        if characterAddedConn then
            characterAddedConn:Disconnect()
        end

        characterAddedConn = Player.CharacterAdded:Connect(function()
            task.wait(0.5)
            if getgenv().LoopDanceEnabled then
                playRandomDance()
            end
        end)
    else
        stopDance()
        if characterAddedConn then
            characterAddedConn:Disconnect()
            characterAddedConn = nil
        end
    end
end)

-- [ TAB #5 - AUTOBUY ] â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

AutobuyTAB:DropdownAlways("  ãƒ»  Choose Brainrot", brainrots, function(value)
	getgenv().SelectedBrainrot = value
end, false)

AutobuyTAB:Toggle("  ãƒ»  Buy choosed brainrot", false, function(bool)
	getgenv().AutoBuyEnabled = bool

    if bool and not getgenv().SelectedBrainrot then
        ImperiumLib:Notification("Notification", "No brainrot selected. Please choose one from the dropdown before activating the toggle.","Okay!",function() end)
    end
end)

AutobuyTAB:Toggle("  ãƒ»  Buy all dropdown brainrots", false, function(bool)	
	getgenv().BuyAllBrainrotsEnabled = bool
end)

-- [ TAB #6 - CREDITS ] â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

CreditsTAB:Label("  ãƒ»  Owner   :  @donfushii")
CreditsTAB:Label("  ãƒ»  Tester    :  @nobodyhere")

CreditsTAB:ColorpickerAlways("  ãƒ»  UI Color", Color3.fromRGB(212, 255, 254), function(t)
	ImperiumLib:ChangePresetColor(Color3.fromRGB(t.R * 255, t.G * 255, t.B * 255))
end)

loadstring(game:HttpGet("https://raw.githubusercontent.com/Imperium-Development/Imperium/main/Core/Loaders/ImperiumLoader.lua"))()
    wait(0.1)
loadstring(game:HttpGet("https://raw.githubusercontent.com/Imperium-Development/Imperium/main/Core/Loaders/ImperiumEmojis.lua"))()
